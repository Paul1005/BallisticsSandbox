// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BallisticsSandboxUITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WpfWindow uIWpfWindow = this.UIWpfWindow;
            WpfEdit uIVelocityEdit = this.UIBallisticsSandboxWindow.UIItemCustom.UIVelocityEdit;
            WpfEdit uIWeightEdit = this.UIBallisticsSandboxWindow.UIItemCustom.UIWeightEdit;
            WpfEdit uIDiameterEdit = this.UIBallisticsSandboxWindow.UIItemCustom.UIDiameterEdit;
            #endregion

            // Launch '%USERPROFILE%\source\repos\BallisticsSandbox\BallisticsSandbox\bin\Debug\BallisticsSandbox.exe'
            ApplicationUnderTest uIBallisticsSandboxWindow = ApplicationUnderTest.Launch(this.RecordedMethod1Params.UIBallisticsSandboxWindowExePath, this.RecordedMethod1Params.UIBallisticsSandboxWindowAlternateExePath);

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(77, 27));

            // Type '100' in 'Velocity' text box
            uIVelocityEdit.Text = this.RecordedMethod1Params.UIVelocityEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(99, 55));

            // Type '5' in 'Weight' text box
            uIWeightEdit.Text = this.RecordedMethod1Params.UIWeightEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(107, 80));

            // Type '5' in 'Diameter' text box
            uIDiameterEdit.Text = this.RecordedMethod1Params.UIDiameterEditText;

            // Click 'Wpf' window
            Mouse.Click(uIWpfWindow, new Point(147, 197));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIBallisticsSandboxWindow UIBallisticsSandboxWindow
        {
            get
            {
                if ((this.mUIBallisticsSandboxWindow == null))
                {
                    this.mUIBallisticsSandboxWindow = new UIBallisticsSandboxWindow();
                }
                return this.mUIBallisticsSandboxWindow;
            }
        }
        
        public UIWpfWindow UIWpfWindow
        {
            get
            {
                if ((this.mUIWpfWindow == null))
                {
                    this.mUIWpfWindow = new UIWpfWindow();
                }
                return this.mUIWpfWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIBallisticsSandboxWindow mUIBallisticsSandboxWindow;
        
        private UIWpfWindow mUIWpfWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\source\repos\BallisticsSandbox\BallisticsSandbox\bin\Debug\BallisticsSandbox.exe'
        /// </summary>
        public string UIBallisticsSandboxWindowExePath = "C:\\Users\\Paul\\source\\repos\\BallisticsSandbox\\BallisticsSandbox\\bin\\Debug\\Ballisti" +
            "csSandbox.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\source\repos\BallisticsSandbox\BallisticsSandbox\bin\Debug\BallisticsSandbox.exe'
        /// </summary>
        public string UIBallisticsSandboxWindowAlternateExePath = "%USERPROFILE%\\source\\repos\\BallisticsSandbox\\BallisticsSandbox\\bin\\Debug\\Ballisti" +
            "csSandbox.exe";
        
        /// <summary>
        /// Type '100' in 'Velocity' text box
        /// </summary>
        public string UIVelocityEditText = "100";
        
        /// <summary>
        /// Type '5' in 'Weight' text box
        /// </summary>
        public string UIWeightEditText = "5";
        
        /// <summary>
        /// Type '5' in 'Diameter' text box
        /// </summary>
        public string UIDiameterEditText = "5";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBallisticsSandboxWindow : WpfWindow
    {
        
        public UIBallisticsSandboxWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "BallisticsSandbox";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("BallisticsSandbox");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MainWindow";
            this.WindowTitles.Add("BallisticsSandbox");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIVelocityEdit
        {
            get
            {
                if ((this.mUIVelocityEdit == null))
                {
                    this.mUIVelocityEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIVelocityEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Velocity";
                    this.mUIVelocityEdit.WindowTitles.Add("BallisticsSandbox");
                    #endregion
                }
                return this.mUIVelocityEdit;
            }
        }
        
        public WpfEdit UIWeightEdit
        {
            get
            {
                if ((this.mUIWeightEdit == null))
                {
                    this.mUIWeightEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIWeightEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Weight";
                    this.mUIWeightEdit.WindowTitles.Add("BallisticsSandbox");
                    #endregion
                }
                return this.mUIWeightEdit;
            }
        }
        
        public WpfEdit UIDiameterEdit
        {
            get
            {
                if ((this.mUIDiameterEdit == null))
                {
                    this.mUIDiameterEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIDiameterEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Diameter";
                    this.mUIDiameterEdit.WindowTitles.Add("BallisticsSandbox");
                    #endregion
                }
                return this.mUIDiameterEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIVelocityEdit;
        
        private WpfEdit mUIWeightEdit;
        
        private WpfEdit mUIDiameterEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWpfWindow : WpfWindow
    {
        
        public UIWpfWindow()
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
}
